package FileSystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

import javax.swing.JOptionPane;

/*
 * Bu clas tüm dosyalama sistemini düzenleyecek olan clas
 * bir dosyada diðer klasörlerde ne olduðunu kayýt altýna alacak
 * yeni test dosyalarý açacak ve bu dosyalarý istenildiðinde görüntüleyebilecek
 * açtýðý dosyayý kapatabilecek
 * ve yeni test dosyasý oluþturabilecek
 * Test dosyasýna soru ekleyip silebilecek olmalý
 * 
 * 
 * 
 * 
 *O zaman bir dosyadan tane tane okuyalým onu da listeye yazalým
 */
public class OpenTest{
	TestFile ActiveTest;
	FileInputStream input;
	ObjectInputStream inputStream;
	FileOutputStream output;
	ObjectOutputStream outputStream;
	String index;
	public OpenTest() {
		ActiveTest = null;
		input = null;
		inputStream = null;
		output = null;
		outputStream = null;
		index = null;
	}
	
	public void createTest(String pathname) {//Test oluþturuldu
		try {
			output = new FileOutputStream(new File(pathname));
			outputStream = new ObjectOutputStream(output);
			outputStream.writeObject(new TestFile());
			output.close();
			outputStream.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		dowlandTest(pathname);
	}
	
	public void saveTest() {//Testi save et
		if(index != null) {
			try {
				output = new FileOutputStream(new File(index));
				outputStream = new ObjectOutputStream(output);
				outputStream.writeObject(ActiveTest);
				output.close();
				output.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
	}
	
	public void dowlandTest(String pathname) {//Test yüklenir
		try {
			input = new FileInputStream(new File(pathname));
			inputStream = new ObjectInputStream(input);
			Object o= (Object) inputStream.readObject();
			ActiveTest = (TestFile) o;
			input.close();
			inputStream.close();
			index = pathname;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Bu dosya bozuk ve açýlamýyor");
		}
		
	}
	public void exitTest() {//Testten çýk
		index = null;
		ActiveTest = null;
	}
	public String returnFileName() {//Dosyalarýn listesi yüklenir
		try {
			FileReader reader = new FileReader(new File("Test/FileList.page"));
			BufferedReader read = new BufferedReader(reader);
			String ListFile = "";
			for(String x = read.readLine();x != null;x = read.readLine()) {
				ListFile = ListFile + "\n" + x;
			}
			reader.close();
			read.close();
			return ListFile;
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Dosya bulunumadý");
			
			return null;
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return null;
		}
	}
	
	public void saveFileIndex(String str) {
		try {
			FileWriter write = new FileWriter(new File("Test/FileList.page"),true);
			BufferedWriter writer = new BufferedWriter(write);
			write.write(str+"\n");
			writer.close();
			write.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}
	
	//Set ve get fonksiyonu
	public TestFile getActiveTest() {//Aktif testi döner
		return ActiveTest;
	}
	
	public String getActiveTestIndex() {
		return index;
	}
}